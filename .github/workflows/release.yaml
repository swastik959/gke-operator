name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name}}

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
        id: goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean --verbose

      - name: Upload charts to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: rancher
          TAG: ${{ github.ref_name }}
        run: |
          version=$(echo '${{ steps.goreleaser.outputs.metadata }}' | jq -r '.version')
          echo "Publishing helm charts (version: $version)"
          CHART_VERSION=$version GIT_TAG=$version make charts
          for f in $(find bin/ -name '*.tgz'); do
            echo "Uploading $f to GitHub release $TAG"
            gh release upload $TAG $f
          done
          echo "Charts successfully uploaded to GitHub release $TAG"

      - name: Add charts to branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(echo '${{ steps.goreleaser.outputs.metadata }}' | jq -r '.version')
          branch_version=v$(echo "$version" | cut -d'.' -f1,2)
          charts_branch=charts/$branch_version

          if [ ! -e ~/.gitconfig ]; then
            git config --global user.name "gke-operator-bot"
            git config --global user.email gke-operator@suse.de
          fi

          echo "Publishing helm chart in the branch $charts_branch"
          if ! git ls-remote --exit-code --heads origin "$charts_branch"; then
            git checkout --orphan "$charts_branch"
            git rm -rf .

            echo "# EKS Operator Helm Charts for $branch_version versions" > README.md
            echo "The documentation is centralized in a unique place, checkout https://github.com/rancher/gke-operator." >> README.md

            git checkout origin/main -- License .gitignore

            git add README.md License .gitignore
            git commit -m "Initial commit for $charts_branch"
          else
            git checkout .
            git checkout "$charts_branch"
          fi

          mkdir -p charts
          for f in $(find bin/ -name '*.tgz'); do
            tar -xf $f -C charts/
          done

          git add charts/**/*
          git commit -m "Update charts to version $version"

          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git push origin "$charts_branch"

